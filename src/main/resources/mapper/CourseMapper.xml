<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.edu.entity.Course">
    <id column="course_id"  property="courseId" />
    <result column="course_code"  property="courseCode" />
    <result column="course_name"  property="courseName" />
    <result column="course_type"  property="courseType" />
    <result column="college_id"  property="collegeId" />
    <result column="teacher_id"  property="teacherId" />
    <result column="course_term_id"  property="courseTermId" />
    <result column="course_term"  property="courseTerm" />
    <result column="course_status"  property="courseStatus" />
    <result column="course_time"  property="courseTime" />
    <result column="course_place"  property="coursePlace" />
    <result column="course_credit"  property="courseCredit" />
    <result column="usual_weight"  property="usualWeight" />
    <result column="end_weight"  property="endWeight" />
  </resultMap>
  <sql id="Base_Column_List">
    course_id, course_code, course_name, course_type, college_id, teacher_id, course_term_id,course_term,
    course_status, course_time, course_place, course_credit, usual_weight, end_weight
  </sql>
<!--  -->
  <select id="getThisCourses" parameterType="Integer" resultMap="ChooseCourseMap">
    select A.course_id, A.course_code, A.course_name, A.course_type, A.college_id, A.teacher_id, A.course_status, A.course_term, A.course_time, A.course_place,A.course_credit, A.usual_weight, A.end_weight
    from course A
    left join term on A.course_term_id = term.term_id
    where course_status = 1 and not exists(select * from choose_course where user_id = #{userId} and course_id = A.course_id) and term.term_status=1
  </select>
  <resultMap id="ChooseCourseMap" type="com.edu.entity.Course">
    <id column="course_id"  property="courseId" />
    <result column="course_code"  property="courseCode" />
    <result column="course_name"  property="courseName" />
    <result column="course_type"  property="courseType" />
    <result column="college_id"  property="collegeId" />
    <result column="teacher_id"  property="teacherId" />
    <result column="course_term_id"  property="courseTermId" />
    <result column="course_term"  property="courseTerm" />
    <result column="course_status"  property="courseStatus" />
    <result column="course_time"  property="courseTime" />
    <result column="course_place"  property="coursePlace" />
    <result column="course_credit"  property="courseCredit" />
    <result column="usual_weight"  property="usualWeight" />
    <result column="end_weight"  property="endWeight" />
  </resultMap>
<!-- 查询所有课程 -->
  <select id="selectCourseList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from course
  </select>
<!--  -->
<!-- 查询本学期开课 -->
  <select id="getThisStartCourses" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from term, course
    where term.term_id = course.course_term_id
    and teacher_id = #{userId} and term_status = 1
  </select>
<!--  -->
<!-- 选课结果 -->
  <select id="getChooseCourseResult" resultMap="BaseResultMap">
    select course.course_id, course_code, course_name, course_type, college_id, teacher_id, course_status, course_term_id, course_term, course_time, course_place, course_credit, usual_weight, end_weight
     from course, choose_course, term
     where course.course_id = choose_course.course_id and
     course.course_term_id = term.term_id and
     term_status = 1 and choose_course.`status` = 0 and user_id = #{userId}
  </select>
<!--  -->
<!-- 历史选课 -->
  <select id="getHistoryCourses"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from course natural join choose_course
    where user_id = #{userId}
    <if test="term!=null">
      and course_term_id = #{term}
    </if>
  </select>
<!--  -->
<!-- 本学期课程成绩 -->
  <select id="getThisCoursesHasGrade" resultMap="BaseResultMap">
    select A.course_id, A.course_code, A.course_name, A.course_type, A.college_id, A.teacher_id, A.course_status, A.course_term, A.course_time, A.course_place, A.course_credit, A.usual_weight, A.end_weight
    from course A
    natural join choose_course B
    left join term on A.course_term_id = term_id
    where B.`status` = 1 and B.user_id = #{userId} and term_status=1
  </select>
<!--  -->
<!-- 历史课程成绩 -->
  <select id="getHistoryGrade" resultMap="BaseResultMap">
    select A.course_id, A.course_code, A.course_name, A.course_type, A.college_id, A.teacher_id, A.course_status, A.course_term, A.course_time, A.course_place, A.course_credit, A.usual_weight, A.end_weight
    from course A natural join choose_course B
    where B.`status` = 1 and B.user_id = #{userId}
    <if test="term!=null">
      and course_term_id = #{term}
    </if>
  </select>
<!--  -->
  <select id="getAllStartCourses" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from course
    <where>
    <if test="collegeId!=null">
      and college_id = #{collegeId}
    </if>
    <if test="termId!=null">
      and course_term_id = #{termId}
    </if>
    </where>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where course_id = #{courseId}
  </delete>
<!--  新增课程-->
  <insert id="insertSelective" parameterType="com.edu.entity.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseCode != null">
        course_code,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseType != null">
        course_type,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="courseTermId != null">
        course_term_id,
      </if>
      <if test="courseTerm != null">
        course_term,
      </if>
      <if test="courseStatus != null">
        course_status,
      </if>
      <if test="courseTime != null">
        course_time,
      </if>
      <if test="coursePlace != null">
        course_place,
      </if>
      <if test="courseCredit != null">
        course_credit,
      </if>
      <if test="usualWeight != null">
        usual_weight,
      </if>
      <if test="endWeight != null">
        end_weight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId},
      </if>
      <if test="courseCode != null">
        #{courseCode},
      </if>
      <if test="courseName != null">
        #{courseName},
      </if>
      <if test="courseType != null">
        #{courseType},
      </if>
      <if test="collegeId != null">
        #{collegeId},
      </if>
      <if test="teacherId != null">
        #{teacherId},
      </if>
      <if test="courseTermId != null">
        #{courseTermId},
      </if>
      <if test="courseTerm != null">
        #{courseTerm},
      </if>
      <if test="courseStatus != null">
        #{courseStatus},
      </if>
      <if test="courseTime != null">
        #{courseTime},
      </if>
      <if test="coursePlace != null">
        #{coursePlace},
      </if>
      <if test="courseCredit != null">
        #{courseCredit},
      </if>
      <if test="usualWeight != null">
        #{usualWeight},
      </if>
      <if test="endWeight != null">
        #{endWeight},
      </if>
    </trim>
  </insert>
<!--  -->
<!-- 更新课程信息 -->
  <update id="updateByPrimaryKeySelective" parameterType="com.edu.entity.Course">
    update course
    <set>
      <if test="courseCode != null">
        course_code = #{courseCode},
      </if>
      <if test="courseName != null">
        course_name = #{courseName},
      </if>
      <if test="courseType != null">
        course_type = #{courseType},
      </if>
      <if test="collegeId != null">
        college_id = #{collegeId},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId},
      </if>
      <if test="courseTermId != null">
        course_term_id = #{courseTermId},
      </if>
      <if test="courseStatus != null">
        course_status = #{courseStatus},
      </if>
      <if test="courseTime != null">
        course_time = #{courseTime},
      </if>
      <if test="coursePlace != null">
        course_place = #{coursePlace},
      </if>
      <if test="courseCredit != null">
        course_credit = #{courseCredit},
      </if>
      <if test="usualWeight != null">
        usual_weight = #{usualWeight},
      </if>
      <if test="endWeight != null">
        end_weight = #{endWeight},
      </if>
    </set>
    where course_id = #{courseId}
  </update>
<!--  -->
</mapper>